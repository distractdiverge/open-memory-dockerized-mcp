name: Docker Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# This prevents workflow from running multiple times for the same commit when both push and pull_request events happen
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/openmemory
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=tag
      
      - name: Build and export Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Run basic container test
        run: |
          # Test that the container starts successfully
          docker build -t openmemory-test .
          container_id=$(docker run -d -p 8000:8000 openmemory-test)
          sleep 10  # Give the container time to start
          
          # Check if container is running
          if [ "$(docker inspect -f '{{.State.Running}}' $container_id)" == "true" ]; then
            echo "Container is running"
            # Basic health check - you might want to add more specific tests
            curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health || echo "Health check failed"
          else
            echo "Container failed to start"
            docker logs $container_id
            exit 1
          fi
          
          # Clean up
          docker stop $container_id
          docker rm $container_id

      - name: Run security scan
        uses: docker/build-push-action@v5
        with:
          context: .
          target: builder
          load: true
          tags: openmemory-scan
          scan: true
          no-cache: true

      - name: Push to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
